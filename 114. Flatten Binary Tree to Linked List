/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void po(TreeNode* root,queue<TreeNode*>& temp){
        if(root == NULL)return;
        temp.push(root);
        po(root->left,temp);
        po(root->right,temp);
    }

    void flatten(TreeNode* root) {
        queue<TreeNode*>temp;
        po(root,temp);
        temp.pop();
        TreeNode* newR = root;
        while(!temp.empty()){
            if(root == NULL)return;
            newR->right = temp.front();
            newR->left = NULL;
            temp.pop();
            newR = newR->right;
        }

    }
};
