/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    bool valid(TreeNode* root,TreeNode* find){
        if(!root && !find)return true;
        if(!root || !find)return false;
        if(root->val != find->val)return false;
        return valid(root->left,find->left) && valid(root->right,find->right);
        
    }


    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(root == NULL)return false;
        if(valid(root,subRoot))return true;

        return isSubtree(root->left,subRoot) || isSubtree(root->right,subRoot);
    }
};
