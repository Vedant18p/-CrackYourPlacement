class Solution {
public:

    void getAns(vector<string>& res,string &temp,int &n,int open,int close){
        if(close == n){
            res.push_back(temp);
            return;
        }
        if(open < n){
            temp.push_back('(');
            getAns(res,temp,n,open+1,close);
            temp.pop_back();
        }
        if(close < open){
            temp.push_back(')');
            getAns(res,temp,n,open,close + 1);
            temp.pop_back();
        }
    }


    vector<string> generateParenthesis(int n) {
        vector<string> res;
        string temp = "";
        int open = 0;
        int close = 0;
        getAns(res,temp,n,open,close);
        return res;
    }
};
