class Solution {
public:


    int largestHistogram(vector<int> &temp){
        stack<int> st;
        int n = temp.size();
        vector<int> psi(n,-1);
        vector<int> nsi(n,n);
        st.push(0);
        
        for(int i = 1;i<n;i++){
            while(!st.empty() && temp[st.top()] >= temp[i]) st.pop();
            if(!st.empty()) psi[i] = st.top();
            st.push(i);
        }
        while(!st.empty())st.pop();
        st.push(n-1);
        for(int i = n-2;i>=0;i--){
            while(!st.empty() && temp[st.top()] >= temp[i]) st.pop();
            if(!st.empty())nsi[i] = st.top();
            st.push(i);
        }
        int maxRec = 0;
        for(int i = 0;i<n;i++){
            maxRec = max(maxRec,temp[i] * (nsi[i] - psi[i] -1));
        }
        return maxRec;
    }

    


    int maximalRectangle(vector<vector<char>>& mat) {
        if (mat.empty() || mat[0].empty()) return 0;
        int n = mat.size()-1;
        int m = mat[0].size()-1;
        int maxRec = 0;
        vector<int> temp(m+1,0);
        for(int i = 0;i<=n;i++){
            for(int j = 0;j<=m;j++){
                if(mat[i][j] != '0'){
                    temp[j] += 1;
                }else{
                    temp[j] = 0;
                }

            }
            maxRec = max(maxRec,largestHistogram(temp));
        }
        return maxRec;
    }
    
};
