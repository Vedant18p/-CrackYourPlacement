/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void getPath(TreeNode* root,vector<string> &res,string temp){
        if(!root)return;
        temp += to_string(root->val);
        if(!root->left && !root->right){
            res.push_back(temp);
            return;
        }
        if(root->left)getPath(root->left,res,temp+"->");
        
        if(root->right)getPath(root->right,res,temp+"->");

    }

    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> res;
    
        getPath(root,res,"");

        return res;
    }
};
