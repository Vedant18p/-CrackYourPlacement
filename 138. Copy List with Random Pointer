/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(!head)return NULL;
        Node* temp = head;
        while(temp != NULL){
            Node* newNode = new Node(temp->val);
            newNode->next = temp->next;
            temp->next = newNode;
            temp = newNode->next;    
        }

        temp = head;
        while(temp != NULL){
            if(temp->random){
                temp->next->random = temp->random->next;
            }
            temp = temp->next->next;
        }

        temp = head;
        Node* newList = temp->next;
        Node* saver = newList;

        while(temp != NULL){
            temp->next = saver->next;
            temp = temp->next;
            if(temp){
                saver->next = saver->next->next;
            }
            saver = saver->next;
        }
        return newList;
    }
};
