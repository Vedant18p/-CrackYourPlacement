/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if (root == NULL)
            return {};
        queue<TreeNode*> q;
        bool flag = true;
        vector<vector<int>> res;
        q.push(root);
        while (!q.empty()) {
            int n = q.size();
            vector<int> temp(n);
            if (flag) {
                for (int i = 0; i < n; i++) {
                    TreeNode* t = q.front();
                    temp[i] = t->val;
                    q.pop();
                    if (t->left != NULL)
                        q.push(t->left);
                    if (t->right != NULL)
                        q.push(t->right);
                }
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    TreeNode* t = q.front();
                    temp[i] = t->val;
                    q.pop();
                    if (t->left != NULL)
                        q.push(t->left);
                    if (t->right != NULL)
                        q.push(t->right);
                }
            }
            flag = !flag;
            res.push_back(temp);
        }
        return res;
    }
};
