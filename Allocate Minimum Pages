//{ Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function template in C++

class Solution {
  public:
  
    bool isValid(int arr[],int mid,int n,int m){
        int sc = 1;
        int sum = 0;
        for(int i = 0;i<n;i++){
            if(arr[i] + sum <= mid){
                sum += arr[i];
            }else{
                sc++;
                if(sc > m || arr[i] > mid)return false;
                sum = arr[i];
            }
        }
        return true;
    }
  
    // Function to find minimum number of pages.
    long long findPages(int n, int arr[], int m) {
        if (m > n) return -1;
        // code here
        int lo = *max_element(arr, arr + n);
        int sum = 0;
        for(int i = 0;i<n;i++){
            sum += arr[i];
            
        }
        int hi = sum;
        int ans = -1;
        
        int mid = lo + (hi-lo)/2;
        
        while(lo<=hi){
            if(isValid(arr,mid,n,m)){
                ans = mid;
                hi = mid -1;
            }else{
                lo = mid + 1;
            }
            mid = lo + (hi-lo)/2;
        }
        return ans;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int A[n];
        for (int i = 0; i < n; i++) {
            cin >> A[i];
        }
        int m;
        cin >> m;
        Solution ob;
        cout << ob.findPages(n, A, m) << endl;
    }
    return 0;
}

// } Driver Code Ends
